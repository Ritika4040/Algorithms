TIME COMPLEXITY 2#

for(i=1;i<n;i=i*2)   _i_
{                     1
    stmt;             1*2=2
}                     2*2=2^2
                      2^2*2=2^3
                        :
                        :
                        2^k
assume  i>=n
      i=2^k
      2^K>=n
      2^k=n
      k=log2n      O(log2n)

other way
i=1*2*2*2---=n
   2^k=n
   k=log2n
-------------------------------------------------------------------------------
for(i=1;i<=n;i++)
{
    stmt;
}
i=1+1+1+1----+1=n
   k=n
-------------------------------------------------------------------------------
for(i=1;i<n;i=i*2)   
{                     n=8
    stmt;------logn    _i_         
}                       1
                        2  =3
                        4
 [log n]
--------------------------------------------------------------------------------
for(i=1;i<n;i=i/2)  
{                   i/n  
    stmt;           n/2  
}                   n/2^2
                    n/2^3
                      :
                     n/2^k
assume i<1
 n/2^k<1
 n/2^k=1
 n=2^k
 k=log2n

O(log2n)
----------------------------------------------------------------------------------------
for(i=1;i<n;i++)   
{                     
    stmt;             
}   
 i*i< n
 i*i>=n
 i^2=n
 i=root n
---------------------------------------------------------------------------------------
for(i=1;i<n;i++)   
{                     
    stmt;-----------n            
}
for(j=0;j<n;j++)
{
     stmt;---------n
}                 ____
                   2n
O(n)
---------------------------------------------------------------------------------------
p=0
for(i=1;i<n;i++)   
{                     
    p++;---------p=logn            
}
for(j=0;j<p;j=j*2)
{
     stmt;---------logp
}                 
                   
O(log logn)
---------------------------------------------------------------------------------------
for(i=1;i<n;i++)-----n   
{                     
  for(j=0;j<n;j*2)---n*logn
  {
     stmt;---------n*logn
   }             ____________
}                 2nlogn+n
O(n logn)  
-------------------------------------------------------------------------------------
for(i=0;i<n;i++)---O(n)
for(i=0;i<n;i=i+2)--n/2 O(n)
for(i=n;i>n;i--)---O(n)
for(i=1;i<n;i=i*2)---O(log2n)base 2
for(i=1;i<n;i=i*3)---O(log2n)base 3
for(i=n;i>1;i=i/2)---O(log2n)base 2
  
              

